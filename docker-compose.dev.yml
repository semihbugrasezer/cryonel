version: '3.8'

services:
  # Development Web Frontend - No Cache Build
  web-dev:
    build: 
      context: ./apps/web
      dockerfile: Dockerfile
      no_cache: true
      args:
        - NODE_ENV=development
    env_file: ./.env
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8080
    depends_on: 
      - api-dev
    ports: 
      - "3000:80"
    volumes:
      - ./apps/web/src:/app/src:ro
      - ./apps/web/public:/app/public:ro
      - ./brand.css:/app/src/brand.css:ro
      - ./palette.json:/app/palette.json:ro
    restart: unless-stopped
    networks:
      - cryonel-dev-network

  # Development API Service - No Cache Build  
  api-dev:
    build: 
      context: ./apps/api
      dockerfile: Dockerfile.dev
      no_cache: true
      args:
        - NODE_ENV=development
    env_file: ./.env
    environment:
      - NODE_ENV=development
    depends_on: 
      - db-dev
      - redis-dev
    ports: 
      - "8080:8080"
    volumes:
      - ./apps/api/src:/app/src:ro
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - cryonel-dev-network

  # Development PostgreSQL Database
  db-dev:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-cryonel}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
      POSTGRES_DB: ${POSTGRES_DB:-cryonel_dev}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes: 
      - postgres_dev_data:/var/lib/postgresql/data
      - ./infra/db/init:/docker-entrypoint-initdb.d
    ports: 
      - "5433:5432"
    restart: unless-stopped
    networks:
      - cryonel-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-cryonel} -d ${POSTGRES_DB:-cryonel_dev}"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Development Redis Cache & Queue
  redis-dev:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes: 
      - redis_dev_data:/data
    ports: 
      - "6380:6379"
    restart: unless-stopped
    networks:
      - cryonel-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  cryonel-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16